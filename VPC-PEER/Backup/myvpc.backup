provider "aws"{
   region             = "us-east-1"
}

provider "aws"{
   region             = "us-east-2"
   alias              = "east2"
}

# Internet VPC
resource "aws_vpc" "demo" {
  cidr_block           = "10.0.0.0/16"
  instance_tenancy     = "default"
  enable_dns_support   = "true"
  enable_dns_hostnames = "true"
  enable_classiclink   = "false"
  tags = {
    Name = "demo"
  }
}

resource "aws_vpc" "demo1" {
  provider             = aws.east2
  cidr_block           = "20.0.0.0/16"
  instance_tenancy     = "default"
  enable_dns_support   = "true"
  enable_dns_hostnames = "true"
  enable_classiclink   = "false"
  tags = {
    Name = "demo1"
  }
}

# Subnets
resource "aws_subnet" "demo-public-subnet" {
  vpc_id                  = aws_vpc.demo.id
  cidr_block              = "10.0.1.0/24"
  map_public_ip_on_launch = "true"
  availability_zone       = "us-east-1a"

  tags = {
    Name = "demo-public-subnet"
  }
}

# Subnets
resource "aws_subnet" "demo1-public-subnet" {
  provider                = aws.east2
  vpc_id                  = aws_vpc.demo1.id
  cidr_block              = "20.0.1.0/24"
  map_public_ip_on_launch = "true"
  availability_zone       = "us-east-2a"

  tags = {
    Name = "demo1-public-subnet"
  }
}

resource "aws_vpc_peering_connection" "demo-demo1-vpc-peering" {
  peer_vpc_id   = aws_vpc.demo1.id 
  vpc_id        = aws_vpc.demo.id
  peer_region   = "us-east-2" 

tags = {
    Name = "demo-demo1-vpc-peering"
  }
}

resource "aws_vpc_peering_connection_accepter" "accept" {
  provider                  = aws.east2
  vpc_peering_connection_id = aws_vpc_peering_connection.demo-demo1-vpc-peering.id
  auto_accept               = true

  tags = {
    Side = "Accepter"
  }
}
